{%- set fw_data = data['out'] %}


{%- if grains.version.startswith('1.4') %}
{%-     set version = '1.4' %}
{%-     set ipv4_name = "ipv4 name" %}
{%-     set ipv6_name = "ipv6 name" %}
{%- else %}
{%-     set version = '1.3' %}
{%-     set ipv4_name = "name" %}
{%-     set ipv6_name = "ipv6-name" %}
{%- endif %}

{%- if version == '1.3' %}

delete zone-policy

{%- endif %}

delete firewall

{%- set port_list = namespace(list='') %}

{%- if ( fw_data['options'] is defined ) %}
{%-     for option, value in fw_data['options'].items() %}
{%-         if version == '1.4' %}
{%-             if option not in ['meta', 'config-trap'] %}

set firewall global-options {{ option }} {{ value }}

{%-             endif %}
{%-         else %}
{%-             if option not in ['meta'] %}

set firewall {{ option }} {{ value }}

{%-             endif %}
{%-         endif %}
{%-     endfor %}
{%- endif %}

{%- if ( fw_data['state_policy'] is defined ) %}
{%-     if ( fw_data['state_policy']['established'] is defined ) %}

set firewall state-policy established action {{ fw_data['state_policy']['established'] }}

{%-     endif %}
{%-     if ( fw_data['state_policy']['related'] is defined ) %}

set firewall state-policy related action {{ fw_data['state_policy']['related'] }}

{%-     endif %}
{%- endif %}
{%- if ( fw_data['mss_clamp'] is defined ) %}
{%-     for interface in fw_data['mss_clamp']['interfaces'] %}

set firewall options interface {{ interface }} adjust-mss {{ fw_data['mss_clamp']['ipv4'] }}
set firewall options interface {{ interface }} adjust-mss6 {{ fw_data['mss_clamp']['ipv6'] }}

{%-     endfor %}
{%- endif %}
{%- if ( fw_data['groups'] is defined ) %}
{%-     for family in fw_data['groups'] %}
{%-         for group, group_data in fw_data['groups'][family].items() %}
{%-             if ( group_data['networks'] is defined ) %}
{%-                 for network in group_data['networks'] %}
{%-                     if ( family == 'ipv4' ) %}

set firewall group network-group {{ group }} network {{ network }}

{%-                     else %}

set firewall group ipv6-network-group {{ group }} network {{ network }}

{%-                     endif %}
{%-                 endfor %}
{%-             endif %}
{%-         endfor %}
{%-     endfor %}
{%- endif %}
{%- if ( fw_data['policies'] is defined ) %}
{%-     for family in fw_data['policies'] %}
{%-         set header = ipv4_name          %}
{%-         if ( family == 'ipv6' )  %}
{%-             set header = ipv6_name %}
{%          endif %}
{%-         for policy, policy_data in fw_data['policies'][family].items() %}
{%-             if ( policy_data['default_action'] is defined ) %}

set firewall {{ header }} {{ policy }} default-action {{ policy_data['default_action'] }}

{%-             endif %}

{%-             if ( policy_data['rules'] is defined ) %}
{%-                 for rule in policy_data['rules'] %}
{%-                     set priority = loop.index * 5 %}

set firewall {{ header }} {{ policy }} rule {{ priority }} action {{ rule['action'] }}

{%-                     if ( rule['state'] is defined ) %}
{%-                         for state in rule['state'] %}

set firewall {{ header }} {{ policy }} rule {{ priority }} state {{ state }} enable

{%-                         endfor %}
{%-                     endif %}
{%-                     if ( rule['protocol'] is defined ) %}

set firewall {{ header }} {{ policy }} rule {{ priority }} protocol {{ rule['protocol'] }}

{%-                     endif %}
{%-                     if ( rule['source'] is defined ) %}
{%-                         if ( rule['source']['network_group'] is defined ) %}

set firewall {{ header }} {{ policy }} rule {{ priority }} source group network-group {{ rule['source']['network_group'] }}

{%-                         endif %}

{%-                         if ( rule['source']['port'] is defined ) %}
{%-                             set port_list.list = '' %}
{%-                             for port in rule['destination']['port'] %}
{%-                                 if loop.index == 1 %}
{%-                                     set port_list.list = port %}
{%-                                 else %}
{%-                                     set port_list.list = port_list.list ~ ',' ~ port %}
{%-                                 endif %}
{%-                             endfor %}

set firewall {{ header }} {{ policy }} rule {{ priority }} source port '{{ port_list.list }}'

{%-                         endif %}
{%-                     endif %}
{%-                     if ( rule['destination'] is defined ) %}
{%-                         if ( rule['destination']['network_group'] is defined ) %}

set firewall {{ header }} {{ policy }} rule {{ priority }} destination group network-group {{ rule['destination']['network_group'] }}

{%-                         endif %}
{%-                         if ( rule['destination']['port'] is defined ) %}
{%-                             set port_list.list = '' %}
{%-                             for port in rule['destination']['port'] %}
{%-                                 if loop.index == 1 %}
{%-                                     set port_list.list = port %}
{%-                                 else %}
{%-                                     set port_list.list = port_list.list ~ ',' ~ port %}
{%-                                 endif %}
{%-                             endfor %}

set firewall {{ header }} {{ policy }} rule {{ priority }} destination port '{{ port_list.list }}'

{%-                         endif %}
{%-                     endif %}
{%-                 endfor %}
{%-             endif %}
{%-         endfor %}
{%-     endfor %}
{%- endif %}

{%- if version == '1.4' %}
{%-     if fw_data['interfaces'] is defined %}
{%-         for group, group_data in fw_data['interfaces'].items() %}
{%-             if group_data['interfaces'] is defined %}
{%-                 for interface in group_data['interfaces'] %}

set firewall group interface-group {{ group }} interface {{ interface }}

{%-                 endfor %}
{%-             endif %}
{%-         endfor %}
{%-     endif %}
{%- endif %}

{%- if ( fw_data['policy_base'] is defined ) %}
{%-     for family in fw_data['policy_base'] %}
{%-         for policy, policy_data in fw_data['policy_base'][family].items() %}
{%-             if ( policy_data['default_action'] is defined ) %}

set firewall {{ family }} {{ policy }} filter default-action {{ policy_data['default_action'] }}

{%-             endif %}
{%-             if ( policy_data['rules'] is defined ) %}
{%-                 for rule in policy_data['rules'] %}
{%-                     set priority = loop.index * 5 %}

set firewall {{ family }} {{ policy }} filter rule {{ priority }} action {{ rule['action'] }}

{%-                     if ( rule['state'] is defined ) %}
{%-                         for state in rule['state'] %}

set firewall {{ family }} {{ policy }} filter rule {{ priority }} state {{ state }} enable

{%-                         endfor %}
{%-                     endif %}
{%-                     if ( rule['protocol'] is defined ) %}

set firewall {{ family }} {{ policy }} filter rule {{ priority }} protocol {{ rule['protocol'] }}

{%-                     endif %}
{%-                     if ( rule['source'] is defined ) %}
{%-                         if ( rule['source']['network_group'] is defined ) %}

set firewall {{ family }} {{ policy }} filter rule {{ priority }} source group network-group {{ rule['source']['network_group'] }}

{%-                         endif %}
{%-                     endif %}

{%-                     if ( rule['interfaces'] is defined ) %}
{%-                         if ( rule['interfaces']['ingress'] is defined ) %}

set firewall {{ family }} {{ policy }} filter rule {{ priority }} inbound-interface interface-group {{ rule['interfaces']['ingress'] }}

{%-                         endif %}
{%-                         if ( rule['interfaces']['egress'] is defined ) %}

set firewall {{ family }} {{ policy }} filter rule {{ priority }} outbound-interface interface-group {{ rule['interfaces']['egress'] }}

{%-                         endif %}
{%-                         if ( rule['policy'] is defined ) %}

set firewall {{ family }} {{ policy }} filter rule {{ priority }} jump-target {{ rule['policy'] }}

{%-                         endif %}
{%-                     endif %}
{%-                 endfor %}
{%-             endif %}
{%-         endfor %}
{%-     endfor %}

{# Always allow internal  loopback traffic #}
set firewall ipv6 input filter rule 1 action 'accept'
set firewall ipv6 input filter rule 1 source address '::1/128'
set firewall ipv4 input filter rule 1 action 'accept'
set firewall ipv4 input filter rule 1 source address '127.0.0.0/8'

{%- endif %}

{%- if version == '1.3' %}
{%-     if ( fw_data['zone_policy'] is defined ) %}
{%-         for zone, zone_data in fw_data['zone_policy'].items() %}
{%-             if ( zone_data['default-action'] is defined ) %}

set zone-policy zone {{ zone }} default-action {{ zone_data['default_action'] }}

{%-             endif %}
{%-             if ( zone_data['from'] is defined ) %}
{%-                 for from_rule in zone_data['from'] %}

set zone-policy zone {{ zone }} from {{ from_rule['zone'] }} firewall ipv6-name {{ from_rule['ipv6_ruleset'] }}
set zone-policy zone {{ zone }} from {{ from_rule['zone'] }} firewall name {{ from_rule['ipv4_ruleset'] }}

{%-                 endfor %}
{%-             endif %}
{%-             if ( zone_data['interfaces'] is defined ) %}
{%-                 for interface in zone_data['interfaces'] %}

set zone-policy zone {{ zone }} interface {{ interface }}

{%-                 endfor %}
{%-             endif %}
{%-         endfor %}
{%-     endif %}

comment zone-policy 'Node zone-policy is SALT MANAGED'

{%- endif %}

comment firewall 'Node firewall is SALT MANAGED'
